<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        McIIAAAAAElFTkSuQmCC
</value>
  </data>
</root>